#!/bin/bash

# pyinit
#
# This script will initialize a new git project in the current folder
# create a virtalenv and configure autoenv.
#
# Please install git, virtualenv, and autoenv, activate autoenv before using this script!
# see https://pypi.python.org/pypi/autoenv for instruction on how to install and activate autoenv
#
# Created by: Johan Bakker


function help {
  cat << EOF

USAGE: pyinit [OPTION]... python2|python3
  -h        show this help text and exit
  -v        show version and exit
EOF
  exit 0
}


function python_virtualenv {
  local _python=$1
  local _projectdir=$2
  local _requirement=''

  if [[ ! -d .virtualenv ]]; then
    mkdir .virtualenv
  fi

  # Create virtualenv and install requirements
  if [[ ! -d .virtualenv/${_projectdir} ]]; then
    echo -e '\e[92mCreating: virtualenv\e[39m'
    virtualenv -p ${_python} .virtualenv/${_projectdir}
    if [[ -f requirements.txt ]]; then
      source .virtualenv/${_projectdir}/bin/activate
      for _requirement in requirements*.txt; do
        pip install -r ${_requirement}
      done
    fi
  fi
}


function python_autoenv {
  local _projectdir=$1
  local _envfile=${AUTOENV_ENV_FILENAME:-.env}
  local _authfile=${AUTOENV_AUTH_FILE:-~/.autoenv_authorized}

  # Add autoenv symlink
  if [[ ! -L ${_envfile} ]]; then
    echo -e '\e[92mEnable: autoenv\e[39m'
    touch ${_authfile}
    ln -s .virtualenv/${_projectdir}/bin/activate ${_envfile}
    hash=($(shasum $(pwd -P)/${_envfile}))
    echo $hash
    if ! grep -q ${hash[0]} ${_authfile}; then
      echo "${hash[1]}:${hash[0]}" >> ${_authfile}
    fi
  fi
}


function gitinit {
  local _envfile=${AUTOENV_ENV_FILENAME:-.env}

  if [[ ! -f .gitignore ]]; then
    touch .gitignore
  fi

  # Add .env directory to .gitignore
  if ! grep -q "^${_envfile}$" .gitignore; then
    echo ${_envfile} >> .gitignore
  fi

  # Add .vurtualenv directory to .gitignore
  if ! grep -q '^\.virtualenv$' .gitignore; then
    echo '.virtualenv' >> .gitignore
  fi

  if [[ ! -d .git ]]; then
    echo -e '\e[92mInitializing: git project\e[39m'
    git init
    git add .gitignore
    git commit -m 'initial commit' .gitignore
  fi
}


# Main
while getopts ":hv" OPTION; do
    case $OPTION in
        h)  help
            exit 1;;
        v)  echo 'pyinit 0.1.0'
            exit 0;;
        \?) exit 1;;
    esac
done

if [[ -z "${1}" ]]; then
  help
  exit 1
fi

if [[ ! ${1} =~ ^python[23]$ ]]; then
  echo -e "\e[91mInvalid python version! use python2 or python3\e[39m"
  help
  exit 1
fi

if ! which virtualenv >/dev/null; then
  echo -e '\e[91mPlease install "virtualenv" before using this script!\e[39m'
  help
  exit 1
fi

if ! which shasum >/dev/null; then
  echo -e '\e[91mPlease install "shasum" before using this script!\e[39m'
  help
  exit 1
fi

set -e
PYTHON=$1
PROJECT=$(basename $PWD)

python_virtualenv ${PYTHON} ${PROJECT}
python_autoenv ${PROJECT}
gitinit
echo -e '\e[93mUse "cd ." to enable the new virtualenv\e[39m'
